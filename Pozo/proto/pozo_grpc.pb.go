// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GetAmountClient is the client API for GetAmount service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GetAmountClient interface {
	AskAmount(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Amount, error)
}

type getAmountClient struct {
	cc grpc.ClientConnInterface
}

func NewGetAmountClient(cc grpc.ClientConnInterface) GetAmountClient {
	return &getAmountClient{cc}
}

func (c *getAmountClient) AskAmount(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Amount, error) {
	out := new(Amount)
	err := c.cc.Invoke(ctx, "/pozo.GetAmount/AskAmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetAmountServer is the server API for GetAmount service.
// All implementations must embed UnimplementedGetAmountServer
// for forward compatibility
type GetAmountServer interface {
	AskAmount(context.Context, *Message) (*Amount, error)
	mustEmbedUnimplementedGetAmountServer()
}

// UnimplementedGetAmountServer must be embedded to have forward compatible implementations.
type UnimplementedGetAmountServer struct {
}

func (UnimplementedGetAmountServer) AskAmount(context.Context, *Message) (*Amount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AskAmount not implemented")
}
func (UnimplementedGetAmountServer) mustEmbedUnimplementedGetAmountServer() {}

// UnsafeGetAmountServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GetAmountServer will
// result in compilation errors.
type UnsafeGetAmountServer interface {
	mustEmbedUnimplementedGetAmountServer()
}

func RegisterGetAmountServer(s grpc.ServiceRegistrar, srv GetAmountServer) {
	s.RegisterService(&GetAmount_ServiceDesc, srv)
}

func _GetAmount_AskAmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetAmountServer).AskAmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pozo.GetAmount/AskAmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetAmountServer).AskAmount(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

// GetAmount_ServiceDesc is the grpc.ServiceDesc for GetAmount service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GetAmount_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pozo.GetAmount",
	HandlerType: (*GetAmountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AskAmount",
			Handler:    _GetAmount_AskAmount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/pozo.proto",
}
